
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."common" (
    "id" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "videoLink" character varying DEFAULT ''::character varying,
    "year" character varying DEFAULT ''::character varying,
    "title" "json",
    "text" "json",
    "seo" "json",
    "pageLinks" "json",
    "copyright" "json",
    "description" "json" DEFAULT '{"ru": "", "en": ""}'::"json",
    "banner" "json" DEFAULT '{"alt": null,"link": null}'::"json" NOT NULL,
    "iframe" "text",
    "bannerMode" "text" DEFAULT 'image'::"text" NOT NULL
);

ALTER TABLE "public"."common" OWNER TO "postgres";

COMMENT ON COLUMN "public"."common"."description" IS 'Meta description of a page';

ALTER TABLE "public"."common" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."common_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."cv" (
    "id" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "json",
    "text" "json"
);

ALTER TABLE "public"."cv" OWNER TO "postgres";

ALTER TABLE "public"."cv" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."cv_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."hat" (
    "id" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "password" character varying,
    "isPutting" boolean DEFAULT true NOT NULL,
    "words" "text"[] NOT NULL
);

ALTER TABLE "public"."hat" OWNER TO "postgres";

COMMENT ON TABLE "public"."hat" IS 'This is table for the hat game';

ALTER TABLE "public"."hat" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."hat_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."participants" (
    "id" bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "isVisible" boolean DEFAULT false NOT NULL,
    "slug" character varying DEFAULT ''::character varying,
    "name" "json",
    "title" "json",
    "description" "json"
);

ALTER TABLE "public"."participants" OWNER TO "postgres";

ALTER TABLE "public"."participants" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."participants_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."practices" (
    "id" bigint NOT NULL,
    "isVisible" boolean DEFAULT false NOT NULL,
    "slug" "json",
    "title" "json",
    "subtitle" "json",
    "description" "json",
    "createdAt" timestamp with time zone DEFAULT "now"() NOT NULL,
    "banner" "jsonb" DEFAULT '{"alt": null, "link": null}'::"jsonb" NOT NULL,
    "iframe" "text",
    "bannerMode" "text" DEFAULT 'image'::"text" NOT NULL
);

ALTER TABLE "public"."practices" OWNER TO "postgres";

ALTER TABLE "public"."practices" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."practices_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."common"
    ADD CONSTRAINT "common_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."cv"
    ADD CONSTRAINT "cv_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."hat"
    ADD CONSTRAINT "hat_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."participants"
    ADD CONSTRAINT "participants_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."participants"
    ADD CONSTRAINT "participants_slug_key" UNIQUE ("slug");

ALTER TABLE ONLY "public"."practices"
    ADD CONSTRAINT "practices_pkey" PRIMARY KEY ("id");

CREATE POLICY "Admin can anything" ON "public"."participants" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Admin can update" ON "public"."common" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Admin rules" ON "public"."practices" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Anyone can read" ON "public"."common" FOR SELECT USING (true);

CREATE POLICY "Anyone can read" ON "public"."cv" FOR SELECT USING (true);

CREATE POLICY "Anyone can read" ON "public"."participants" FOR SELECT USING (("isVisible" = true));

CREATE POLICY "Enable insert for authenticated users only" ON "public"."cv" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."practices" FOR SELECT USING (("isVisible" = true));

ALTER TABLE "public"."common" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."cv" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."participants" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."practices" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."cv";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."participants";

ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."practices";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."common" TO "anon";
GRANT ALL ON TABLE "public"."common" TO "authenticated";
GRANT ALL ON TABLE "public"."common" TO "service_role";

GRANT ALL ON SEQUENCE "public"."common_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."common_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."common_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."cv" TO "anon";
GRANT ALL ON TABLE "public"."cv" TO "authenticated";
GRANT ALL ON TABLE "public"."cv" TO "service_role";

GRANT ALL ON SEQUENCE "public"."cv_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."cv_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."cv_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."hat" TO "anon";
GRANT ALL ON TABLE "public"."hat" TO "authenticated";
GRANT ALL ON TABLE "public"."hat" TO "service_role";

GRANT ALL ON SEQUENCE "public"."hat_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."hat_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."hat_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."participants" TO "anon";
GRANT ALL ON TABLE "public"."participants" TO "authenticated";
GRANT ALL ON TABLE "public"."participants" TO "service_role";

GRANT ALL ON SEQUENCE "public"."participants_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."participants_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."participants_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."practices" TO "anon";
GRANT ALL ON TABLE "public"."practices" TO "authenticated";
GRANT ALL ON TABLE "public"."practices" TO "service_role";

GRANT ALL ON SEQUENCE "public"."practices_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."practices_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."practices_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
