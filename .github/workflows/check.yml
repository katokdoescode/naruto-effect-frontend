name: Code checks

on:
  push:
    branches:
      - stage
      - main
  pull_request:

jobs:
  checks:
    runs-on: ubuntu-latest
    env:
      VITE_LOGIN_PHRASE: test
      VITE_SUPABASE_BUCKET: test
      VITE_ADMIN_EMAIL: test@test.test
      VITE_NODE_ENV: development

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Run checks
        run: |
          bun run check
          bun run check:biome

  unit-tests:
    runs-on: ubuntu-latest
    env:
      VITE_TINYMCE_API_KEY: gpl
      VITE_NODE_ENV: development

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun run test:unit

  # integration-tests:
  #   runs-on: ubuntu-latest
  #   env:
  #     VITE_TINYMCE_API_KEY: gpl
  #     VITE_SUPABASE_BUCKET: naruto-effect-public-storage
  #     VITE_BFF_SUPABASE_URL: http://localhost:54321/
  #     VITE_ADMIN_EMAIL: example@example.xyz
  #     VITE_LOGIN_PHRASE: test
  #     VITE_NODE_ENV: development

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2

  #     - name: Install Bun
  #       uses: oven-sh/setup-bun@v2

  #     - name: Install dependencies
  #       run: bun install

  #     - name: Install Playwright
  #       run: bunx playwright install --with-deps

  #     - name: Install Supabase
  #       uses: supabase/setup-cli@v1
  #       with:
  #           version: latest

  #     - name: Configure pgsodium
  #       run: |
  #         mkdir -p $HOME/.config/supabase/plugins/
  #         echo '{ "pgsodium": { "version": "3.1.8" } }' > $HOME/.config/supabase/plugins/config.json

  #     - name: Start Supabase
  #       run: |
  #         supabase start --debug
  #         supabase db reset --debug

  #     - name: Store Supabase Anon Key
  #       run: |
  #         output=$(supabase status -o env)
  #         echo "VITE_SUPABASE_CLIENT_ANON_KEY=$(echo "$output" | grep 'ANON_KEY' | cut -d '=' -f2 | tr -d '"')" >> $GITHUB_ENV

  #     - name: Run E2E Tests
  #       run: bun run test:integration:user

  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 7
